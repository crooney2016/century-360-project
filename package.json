{
  "name": "century-360-project",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "dev:stable": "ENV=stable next dev",
    "dev:beta": "ENV=beta next dev",
    "build": "next build",
    "build:fast": "next build --no-lint",
    "build:stable": "ENV=stable next build",
    "build:beta": "ENV=beta next build",
    "start": "next start",
    "lint": "eslint . --cache --max-warnings=0 --ignore-pattern 'src/generated/**' --ignore-pattern 'src/graphql/generated/**' --ignore-pattern 'prisma/generated/**' --ignore-pattern '.next/**' --ignore-pattern 'docs/ui/assets/**' --ignore-pattern 'public/typedoc/**'",
    "lint:fix": "next lint --fix",
    "lint:check": "next lint --max-warnings=50",
    "format": "prettier --write .",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "test-storybook": "test-storybook",
    "db:start": "bash -lc \"(docker ps -a --format '{{.Names}}' | grep -q '^century-postgres$') || docker run -e 'POSTGRES_DB=century360' -e 'POSTGRES_USER=postgres' -e 'POSTGRES_PASSWORD=postgres' -p 5432:5432 --name century-postgres -d postgres:15\" && docker start century-postgres",
    "db:wait": "wait-on tcp:localhost:5432",
    "db:stop": "docker stop century-postgres || true",
    "db:remove": "docker rm -f century-postgres || true",
    "db:reset": "pnpm db:stop && pnpm db:remove && pnpm db:start && pnpm db:wait && pnpm prisma:reset && pnpm db:seed",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:push": "prisma db push",
    "prisma:reset": "prisma migrate reset -f",
    "prisma:studio": "prisma studio",
    "db:seed": "tsx prisma/seed.ts",
    "azurite:start": "docker-compose up -d azurite",
    "azurite:stop": "docker-compose stop azurite",
    "azurite:restart": "docker-compose restart azurite",
    "azurite:logs": "docker-compose logs -f azurite",
    "azurite:explorer": "docker-compose up -d azurite-explorer",
    "dev:db": "pnpm db:start && pnpm db:wait && pnpm prisma:generate && pnpm prisma:migrate && pnpm db:seed",
    "dev:all": "pnpm dev:db && pnpm dev",
    "dev:full": "pnpm db:reset:seed && concurrently \"pnpm dev\" \"pnpm exec prisma studio --port 5555\"",
    "db:reset:seed": "prisma migrate reset --force --skip-seed && prisma generate && tsx prisma/seed.ts",
    "counts": "tsx scripts/db-counts.ts",
    "studio": "prisma studio --port 5555",
    "graphql:codegen": "graphql-codegen --config codegen.yml",
    "graphql:watch": "graphql-codegen --config codegen.yml --watch",
    "codegen": "pnpm prisma:generate && pnpm graphql:codegen && pnpm barrels",
    "ui:docs": "typedoc && node scripts/typedoc-embed.mjs",
    "snapshot:tree": "tsx scripts/snapshot-tree.ts",
    "format:check": "prettier --check .",
    "markdown:lint": "node scripts/docs-lint.mjs check",
    "markdown:fix": "node scripts/docs-lint.mjs fix",
    "markdown:auto-fix": "node scripts/fix-markdown-lines.mjs",
    "markdown:config": "node scripts/docs-lint.mjs config",
    "format:all": "pnpm format && pnpm markdown:auto-fix",
    "validate": "pnpm format:check && pnpm lint && pnpm typecheck",
    "validate:full": "node scripts/pre-dev-validation.mjs",
    "test": "vitest",
    "test:stable": "ENV=stable vitest --config vitest.stable.config.ts",
    "test:beta": "ENV=beta vitest --config vitest.beta.config.ts",
    "test:all": "pnpm test:stable && pnpm test:beta",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "test:unit": "vitest tests/unit --coverage",
    "test:integration": "vitest tests/integration --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:validate": "pnpm test:unit && pnpm test:integration && pnpm test:coverage",
    "check": "pnpm validate && pnpm test:validate && pnpm test:e2e",
    "prepare": "husky",
    "barrels": "barrelsby",
    "build:pipeline": "pnpm codegen && pnpm build:fast",
    "build:full": "pnpm format && pnpm lint && pnpm typecheck && pnpm build:pipeline",
    "ship": "tsx scripts/ship.ts",
    "ship:status": "tsx scripts/ship.ts status",
    "health:monitor": "node -e \"import('./src/lib/health-monitor.ts').then(m => m.createHealthMonitor())\"",
    "security:audit": "pnpm audit",
    "security:audit:fix": "pnpm audit --fix",
    "security:check": "pnpm audit && echo 'âœ… No vulnerabilities found in dependencies'",
    "security:full": "pnpm security:check && pnpm validate && pnpm test",
    "security:outdated": "pnpm outdated",
    "security:update": "pnpm update --interactive",
    "security:why": "pnpm why",
    "security:licenses": "pnpm licenses list",
    "security:verify": "pnpm install --frozen-lockfile && pnpm audit",
    "pre-dev": "npm run validate"
  },
  "dependencies": {
    "@chakra-ui/icons": "^2.2.4",
    "@apollo/client": "^3.13.9",
    "@apollo/server": "^5.0.0",
    "@as-integrations/next": "^4.0.0",
    "@azure/storage-blob": "^12.28.0",
    "@chakra-ui/react": "^2.10.9",
    "@chakra-ui/theme": "^2.3.0",
    "@emotion/react": "^11",
    "@emotion/styled": "^11",
    "@fast-csv/parse": "^5.0.5",
    "@graphql-tools/schema": "^10.0.25",
    "@hookform/resolvers": "^5.2.1",
    "@measured/puck": "^0.19.3",
    "@prisma/client": "6.13.0",
    "@saas-ui/core": "^2.8.1",
    "@saas-ui/data-table": "^13.0.4",
    "@saas-ui/forms": "^2.11.0",
    "@saas-ui/react": "2.11.4",
    "@saas-ui/theme-glass": "^0.7.1",
    "@tanstack/react-table": "^8.21.3",
    "@tiptap/react": "^3.1.0",
    "@tiptap/starter-kit": "^3.1.0",
    "@types/ws": "^8.18.1",
    "clsx": "^2.1.1",
    "csv-parse": "^6.1.0",
    "exceljs": "^4.4.0",
    "framer-motion": "^10.18.0",
    "graphql": "^16.11.0",
    "graphql-tag": "^2.12.6",
    "graphql-ws": "^6.0.6",
    "lucide-react": "^0.539.0",
    "next": "15.4.6",
    "next-themes": "^0.4.6",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-hook-form": "^7.62.0",
    "react-icons": "^5.5.0",
    "react-intersection-observer": "^9.8.1",
    "react-spring": "^9.7.3",
    "recharts": "^3.1.2",
    "swr": "^2.3.6",
    "ws": "^8.18.3",
    "zod": "^4.0.16",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@graphql-codegen/cli": "^5.0.7",
    "@graphql-codegen/typescript": "^4.1.6",
    "@graphql-codegen/typescript-operations": "^4.6.1",
    "@graphql-codegen/typescript-resolvers": "^4.5.1",
    "@playwright/test": "^1.54.2",
    "@storybook/addon-a11y": "^8.6.14",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/addon-links": "^8.6.14",
    "@storybook/addon-themes": "^8.6.14",
    "@storybook/blocks": "^8.6.14",
    "@storybook/nextjs": "^8.6.14",
    "@storybook/react": "^8.6.14",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^20",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "@vitest/browser": "3.2.4",
    "@vitest/coverage-v8": "3.2.4",
    "barrelsby": "^2.8.1",
    "concurrently": "^9.2.0",
    "eslint": "^9",
    "eslint-config-next": "15.4.6",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.5",
    "markdownlint-cli": "^0.45.0",
    "playwright": "^1.54.2",
    "prettier": "3.6.2",
    "prisma": "^6.13.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typedoc": "^0.28.9",
    "typescript": "^5",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  },
  "packageManager": "pnpm@10.14.0+sha512.ad27a79641b49c3e481a16a805baa71817a04bbe06a38d17e60e2eaee83f6a146c6a688125f5792e48dd5ba30e7da52a5cda4c3992b9ccf333f9ce223af84748"
}
